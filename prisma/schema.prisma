generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL") // uses connection pooling
  directUrl = env("DATABASE_URL_NON_POOLING") // uses a direct connection
}

model Comment {
  id        String   @id @default(cuid()) @db.VarChar(25)
  text      String
  createdAt DateTime @default(now()) @db.Timestamp(6)
  updatedAt DateTime @updatedAt @db.Timestamp(6)
  authorId  String   @db.VarChar(25)
  postId    String   @db.VarChar(25)
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "fk_comment_post")
  author    User     @relation(fields: [authorId], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "fk_comment_user")
}

model Post {
  id        String    @id @default(cuid()) @db.VarChar(25)
  title     String    @db.VarChar(255)
  body      String
  published Boolean   @default(false)
  createdAt DateTime  @default(now()) @db.Timestamp(6)
  updatedAt DateTime  @updatedAt @db.Timestamp(6)
  authorId  String    @db.VarChar(25)
  comments  Comment[]
  author    User      @relation(fields: [authorId], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "fk_post_user")
}

model User {
  id        String    @id @default(cuid()) @db.VarChar(25)
  name      String    @db.VarChar(255)
  email     String    @unique @db.VarChar(255)
  password  String    @db.VarChar(255)
  createdAt DateTime  @default(now()) @db.Timestamp(6)
  updatedAt DateTime  @updatedAt @db.Timestamp(6)
  comments  Comment[]
  posts     Post[]
}
